---
import type { HTMLTag, Polymorphic } from "astro/types";
import type { CollectionEntry } from "astro:content";

import { getPostSortDate } from "@/data/post";
import { Image } from "astro:assets";

import FormattedDate from "../FormattedDate.astro";

type Props<Tag extends HTMLTag> = {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
} & Polymorphic<{ as: Tag }>;

const { as: Tag = "div", post, withDesc = false } = Astro.props;
const postDate = getPostSortDate(post);
---

<FormattedDate class="min-w-[120px] text-gray-600 dark:text-gray-400" date={postDate} />
<Tag>
	{post.data.draft && <span class="text-red-500">(Draft) </span>}
	<a class="cactus-link" data-astro-prefetch href={`/works/${post.slug}/`}>
		{post.data.title}
	</a>
	{
		post.data.coverImage && (
		<div class="aspect-h-9 aspect-w-16 mb-6">
			<Image
				alt={post.data.coverImage.alt}
				class="object-cover"
				fetchpriority="high"
				loading="eager"
				src={post.data.coverImage.src}
			/>
		</div>
	)
	}
</Tag>
{withDesc && <q class="line-clamp-3 italic">{post.data.description}</q>}

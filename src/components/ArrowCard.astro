---
import type { HTMLTag, Polymorphic } from "astro/types";
import type { CollectionEntry } from "astro:content";
import FormattedDate from "./FormattedDate.astro";

import { Image } from "astro:assets";

type Props<Tag extends HTMLTag> = {
	post: CollectionEntry<"post">;
	withDesc?: boolean;
} & Polymorphic<{ as: Tag }>;

const { as: Tag = "div", post, withDesc = false } = Astro.props;

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};
---

<!-- <FormattedDate class="min-w-[120px] text-gray-600 dark:text-gray-400" date={postDate} /> -->
<Tag>
    <a class="cactus-link" data-astro-prefetch href={`/posts/${post.slug}/`}>
        <div class="flex border border-gray-200 dark:border-gray-700 h-[80px]">
            {/* 左側 */}
            <div class="w-2/3 pl-4 flex items-center">
                <div>
                    {post.data.draft && <span class="text-red-500">(Draft) </span>}
                    <h2 class="text-sm">{post.data.title}</h2>
                    <p class="text-xs">
                        <FormattedDate date={post.data.publishDate} dateTimeOptions={dateTimeOptions} />
                    </p>
                </div>
            </div>
            {/* 右側 */}
            {post.data.coverImage && (
                <div class="w-1/3 flex items-center justify-end h-full">
                    <div class="w-auto h-full">
                        <Image
                            alt={post.data.coverImage.alt}
                            class="object-cover h-full"
                            fetchpriority="high"
                            loading="eager"
                            src={post.data.coverImage.src}
                        />
                    </div>
                </div>
            )}
        </div>
    </a>
</Tag>





{withDesc && <q class="line-clamp-3 italic">{post.data.description}</q>}
